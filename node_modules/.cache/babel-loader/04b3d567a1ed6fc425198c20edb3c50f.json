{"ast":null,"code":"// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC2-s58CItjDYxYrbPL3FVYkX9PEOnGfuM\",\n  authDomain: \"myproject-f5dad.firebaseapp.com\",\n  projectId: \"myproject-f5dad\",\n  storageBucket: \"myproject-f5dad.appspot.com\",\n  messagingSenderId: \"1098534321556\",\n  appId: \"1:1098534321556:web:236a0703c53351ff712381\",\n  measurementId: \"G-TG8R4TRPRF\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // Sign in with Google\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n}; //Sign in with email/password\n\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      email,\n      displayName\n    } = user;\n\n    try {\n      await userRef.set({\n        displayName,\n        email\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n\n  return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};","map":{"version":3,"sources":["/Users/ashleypark/Desktop/forFun/for-fun/src/firebaseConfig.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","generateUserDocument","user","additionalData","userRef","doc","uid","snapshot","get","exists","email","displayName","set","error","console","getUserDocument","userDocument","data"],"mappings":"AAAA;AACA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,iCAFO;AAGnBC,EAAAA,SAAS,EAAE,iBAHQ;AAInBC,EAAAA,aAAa,EAAE,6BAJI;AAKnBC,EAAAA,iBAAiB,EAAE,eALA;AAMnBC,EAAAA,KAAK,EAAE,4CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAAvB;AAUAR,QAAQ,CAACS,aAAT,CAAuBR,cAAvB;AACA,OAAO,MAAMS,IAAI,GAAGV,QAAQ,CAACU,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGX,QAAQ,CAACW,SAAT,EAAlB,C,CAEP;;AACA,MAAMC,QAAQ,GAAG,IAAIZ,QAAQ,CAACU,IAAT,CAAcG,kBAAlB,EAAjB;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpCJ,EAAAA,IAAI,CAACK,eAAL,CAAqBH,QAArB;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMI,oBAAoB,GAAG,OAAOC,IAAP,EAAaC,cAAb,KAAgC;AAClE,MAAI,CAACD,IAAL,EAAW;AACX,QAAME,OAAO,GAAGR,SAAS,CAACS,GAAV,CAAe,SAAQH,IAAI,CAACI,GAAI,EAAhC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAqB;AACnB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAyBT,IAA/B;;AACA,QAAI;AACF,YAAME,OAAO,CAACQ,GAAR,CAAY;AAChBD,QAAAA,WADgB;AAEhBD,QAAAA;AAFgB,OAAZ,CAAN;AAID,KALD,CAKE,OAAOG,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACD;AACF;;AACD,SAAOE,eAAe,CAACb,IAAI,CAACI,GAAN,CAAtB;AACD,CAjBM;;AAkBP,MAAMS,eAAe,GAAG,MAAMT,GAAN,IAAa;AACnC,MAAI,CAACA,GAAL,EAAU,OAAO,IAAP;;AACV,MAAI;AACF,UAAMU,YAAY,GAAG,MAAMpB,SAAS,CAACS,GAAV,CAAe,SAAQC,GAAI,EAA3B,EAA8BE,GAA9B,EAA3B;AACA,WAAO;AACLF,MAAAA,GADK;AAEL,SAAGU,YAAY,CAACC,IAAb;AAFE,KAAP;AAID,GAND,CAME,OAAOJ,KAAP,EAAa;AACbC,IAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD;AACF,CAXD","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC2-s58CItjDYxYrbPL3FVYkX9PEOnGfuM\",\n    authDomain: \"myproject-f5dad.firebaseapp.com\",\n    projectId: \"myproject-f5dad\",\n    storageBucket: \"myproject-f5dad.appspot.com\",\n    messagingSenderId: \"1098534321556\",\n    appId: \"1:1098534321556:web:236a0703c53351ff712381\",\n    measurementId: \"G-TG8R4TRPRF\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n// Sign in with Google\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n};\n\n//Sign in with email/password\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists){\n    const { email, displayName } = user;\n    try {\n      await userRef.set({\n        displayName,\n        email\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n  return getUserDocument(user.uid);\n};\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error){\n    console.error(\"Error fetching user\", error);\n  }\n};"]},"metadata":{},"sourceType":"module"}